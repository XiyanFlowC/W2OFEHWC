<head>
    <title>用户注册</title>
    <link rel="stylesheet" type="text/css" href="./css/bootstrap.css" />
    <link rel="stylesheet" type="text/css" href="./css/site.css" />
    <script src="./js/jquery-3.5.1.min.js"></script>
    <script src="./js/bootstrap.js"></script>
    <script src="./js/vue.js"></script>
</head>
<body>
    <div id="register" class="container">
        <div class="alert alert-danger" v-if="alertmsg != ''">{{alertmsg}}</div>
        <form id="login-form" class="form-signin">
            <h1>{{gname}}</h1>
            <h2 class="form-signin-heading">用户注册</h2>
            <input v-model="accound" type="text" id="accoundInput" class="form-control" placeholder="邮箱" required autofocus />
            <input v-model="niknm" type="text" id="nikeName" class="form-control" placeholder="昵称" />
            <input v-model="passwd" type="password" id="pswdInput" class="form-control" placeholder="密码" required />
            <input v-model="rptpswd" type="password" id="repeatPassword" class="form-control" placeholder="重复密码" required/>
            <div class="control-group">
                <input v-model="veryficode" type="text" id="vfcodeInput" class="form-control" placeholder="验证码" style="width: 60%; min-width: 10rem; display:table-cell" required/>
                <button id='sndmlbtn' @click="sendvfcode" type="button" class="btn" style="width: 30%; display: table-cell;">发送验证码</button>
            </div>
            <div style="text-align: right; margin: 0"><a href="login.htm">我已有账号</a></div>
            <button class="btn btn-lg btn-primary btn-block" type="button" @click="reg">注册</button>
        </form>
    </div>
    <script>
        var appname = "大大网盘";
        var apirt = "http://39.105.228.56:8080/disk"

        var vapp = new Vue({
            el : "#register",
            data : {
                gname : appname,
                passwd : "",
                rptpswd : "",
                niknm : "",
                accound: "",
                alertmsg : "",
                veryficode : "",
                chkvfcode : null,
                tmvfcode : null
            },
            methods:{
                sendvfcode: function() {
                    if(this.accound == '') {
                        this.alertmsg = '用户名不能为空'
                        return;
                    }
                    if(!/([a-zA-Z]|[0-9]|_)+@[a-zA-Z0-9]+\.([a-zA-Z0-9])/.test(this.accound)) {
                        this.alertmsg = '邮箱格式不正确'
                        return;
                    }
                    $('#sndmlbtn').hide();
                    $.ajax({
                        url: apirt + "/user/sendEmail",
                        type: "POST",
                        data: {
                            email: this.accound
                        },
                        success: (data, status, xhr) => {
                            if(data.code == 1)
                            {
                                //console.log(data);
                                this.chkvfcode = data.obj.code;
                                this.tmvfcode = data.obj.time;
                            }
                            else if(data.code == -1)
                            {
                                $('#sndmlbtn').show();
                                this.alertmsg = data.msg;
                            }
                            else this.alertmsg = '接口返回结果违反规范'
                        },
                        error: (xhr, status, err) => {
                            $('#sndmlbtn').show();
                            if(status == "timeout") alertmsg = "服务器响应超时"
                            if(status == "parseerror") alertmsg = "数据错误"
                            if(status == "error") 
                            {
                                switch (xhr.status) {
                                    case 404:
                                        this.alertmsg = "服务器资源不存在"
                                        break;
                                    case 403:
                                        this.alertmsg = "服务器拒绝访问"
                                        break;
                                    case 500:
                                        this.alertmsg = "服务器内部错误，恭喜后端同学"
                                        break;
                                    default:
                                        this.alertmsg = "服务器未知错误"
                                        break;
                                }
                            }
                        }
                    })
                },
                reg : function() {
                    if(this.accound == "")
                    {
                        this.alertmsg = "用户名为必填字段"
                    }
                    if(this.niknm == "")
                    {
                        this.niknm = this.accound;
                    }
                    if(this.passwd == "")
                    {
                        this.alertmsg = "密码为必填字段"
                    }
                    if(this.rptpswd != this.passwd)
                    {
                        this.alertmsg = "密码与重复密码不匹配"
                        return
                    }
                    $.ajax({
                        url: apirt + "/user/register",
                        type: "post",
                    data: {
                        code: this.veryficode,
                        encryptionCode: this.chkvfcode,
                        time: this.tmvfcode,
                        userAccount : this.accound,
                        userName: this.niknm,
                        userPassword : this.passwd
                    },
                    success: (data, status, jqXHR) =>
                    {
                        if(jqXHR.status == 200)
                        {// OK
                            if(data.code == -1)
                            {
                                this.alertmsg = data.msg
                            }
                            else if(data.code == 1)
                            {
                                alert('成功，将跳转到登入页面')
                                top.location = './login.htm'
                            }
                            else
                            {
                                this.alertmsg = "接口返回结果违反规范"
                            }
                        }
                        if(jqXHR.status == 403)
                        {
                            this.alertmsg = "登入请求被拒绝"
                        }
                        if(jqXHR.status == 404)
                        {
                            this.alertmsg = "服务器离线或资源丢失"
                        }
                        if(jqXHR.status == 402)
                        {
                            this.alertmsg = "需要付费使用"
                        }
                        if(jqXHR.status == 401)
                        {
                            this.alertmsg = "需要授权以使用"
                        }
                    },
                    error: (xhr, status, err) =>
                    {
                        $('#sndmlbtn').show();
                        if(status == "timeout") alertmsg = "服务器响应超时"
                        if(status == "parseerror") alertmsg = "数据错误"
                        if(status == "error") alertmsg = '未知错误'
                    }})
                }
            }
        });
    </script>
</body>